import { AfterViewInit, Component, OnDestroy, ViewChild } from "@angular/core";
import { Location } from "@angular/common";
import { Dialog } from "primeng/dialog";
import { FeatureService } from "@app/core/services/feature/feature.service";
import { filter, take } from "rxjs/operators";
import { NavigationEnd, Router } from "@angular/router";
/**
 * Component that loads a child route in the main body.
 * It is mainly used in the screens generated by `UI Studio` with navigation of type `Dialog`
 */
@Component({
  selector: "app-screen-dialog",
  templateUrl: "./screen-dialog.component.html"
})
export class ScreenDialogComponent implements AfterViewInit {
  /**
   * The property to display the dialog if `true`
   */
  displayDialog = true;
  /**
   * Holds the active element when opening a dialog
   */
   activeElement: Element;
  /**
   * Content element
   */
  @ViewChild(Dialog, { static: false }) dialog;
  constructor(private location: Location, private featureService: FeatureService, private router:Router) { }

  ngAfterViewInit(): void {
    this.activeElement = document.activeElement;
    this.featureService.setFocus(this.dialog.el, 'button');
    //This workaround is needed till primeNG issues fixes the solution could be cleaner
    //https://github.com/primefaces/primeng/issues/9732
    //https://github.com/primefaces/primeng/issues/9465
    this.router.events.pipe(
      filter((e) => e instanceof NavigationEnd && !e.url.includes('(dialog:')),
      take(1)
      ).subscribe((e) => {
        document.body.classList.remove("p-overflow-hidden")
      });
  }

  /**
   * Returns to the caller component screen when closing the Dialog
   */
  cancel() {
    (this.activeElement as HTMLElement)?.focus();
    this.location.back();
  }
}
